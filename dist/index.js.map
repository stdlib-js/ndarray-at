{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isndarrayLike = require( '@stdlib/assert-is-ndarray-like' );\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar normalizeIndex = require( '@stdlib/ndarray-base-normalize-index' );\nvar getShape = require( '@stdlib/ndarray-shape' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns an ndarray element.\n*\n* @param {ndarrayLike} x - input ndarray\n* @param {...integer} [indices] - indices\n* @throws {TypeError} first argument must be an ndarray\n* @throws {TypeError} index arguments must be integers\n* @throws {RangeError} number of index arguments must equal the number of dimensions\n* @returns {*} ndarray element\n*\n* @example\n* var zeros = require( '@stdlib/ndarray-zeros' );\n*\n* var x = zeros( [ 3, 3 ] );\n* // returns <ndarray>\n*\n* var v = at( x, 0, 0 );\n* // returns 0\n*\n* v = at( x, 5, 5 );\n* // returns undefined\n*/\nfunction at( x ) {\n\tvar nargs;\n\tvar args;\n\tvar idx;\n\tvar sh;\n\tvar N;\n\tvar i;\n\n\tif ( !isndarrayLike( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ndarray. Value: `%s`.', x ) );\n\t}\n\tsh = getShape( x );\n\tN = sh.length;\n\tnargs = arguments.length - 1;\n\tif ( nargs < N ) {\n\t\tthrow new RangeError( 'invalid invocation. Insufficient arguments. Array shape: (%s). Number of indices: %u.', sh.join( ',' ), nargs );\n\t} else if ( nargs > N ) {\n\t\tthrow new RangeError( 'invalid invocation. Too many arguments. Array shape: (%s). Number of indices: %u.', sh.join( ',' ), nargs );\n\t}\n\targs = [];\n\tfor ( i = 1; i <= nargs; i++ ) {\n\t\tidx = arguments[ i ];\n\t\tif ( !isInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index arguments must be integers. Value: `%s`.', idx ) );\n\t\t}\n\t\tidx = normalizeIndex( idx, sh[i-1]-1 );\n\t\tif ( idx === -1 ) {\n\t\t\t// Index is out-of-bounds...\n\t\t\treturn;\n\t\t}\n\t\targs.push( idx );\n\t}\n\treturn x.get.apply( x, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = at;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an ndarray element.\n*\n* @module @stdlib/ndarray-at\n*\n* @example\n* var zeros = require( '@stdlib/ndarray-zeros' );\n* var at = require( '@stdlib/ndarray-at' );\n*\n* var x = zeros( [ 3, 3 ] );\n* // returns <ndarray>\n*\n* var v = at( x, 0, 0 );\n* // returns 0\n*\n* v = at( x, 5, 5 );\n* // returns undefined\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,gCAAiC,EAC1DC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAiB,QAAS,sCAAuC,EACjEC,EAAW,QAAS,uBAAwB,EAC5CC,EAAS,QAAS,uBAAwB,EA2B9C,SAASC,EAAIC,EAAI,CAChB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAK,CAACZ,EAAeM,CAAE,EACtB,MAAM,IAAI,UAAWF,EAAQ,oEAAqEE,CAAE,CAAE,EAKvG,GAHAI,EAAKP,EAAUG,CAAE,EACjBK,EAAID,EAAG,OACPH,EAAQ,UAAU,OAAS,EACtBA,EAAQI,EACZ,MAAM,IAAI,WAAY,wFAAyFD,EAAG,KAAM,GAAI,EAAGH,CAAM,EAC/H,GAAKA,EAAQI,EACnB,MAAM,IAAI,WAAY,oFAAqFD,EAAG,KAAM,GAAI,EAAGH,CAAM,EAGlI,IADAC,EAAO,CAAC,EACFI,EAAI,EAAGA,GAAKL,EAAOK,IAAM,CAE9B,GADAH,EAAM,UAAWG,CAAE,EACd,CAACX,EAAWQ,CAAI,EACpB,MAAM,IAAI,UAAWL,EAAQ,mEAAoEK,CAAI,CAAE,EAGxG,GADAA,EAAMP,EAAgBO,EAAKC,EAAGE,EAAE,CAAC,EAAE,CAAE,EAChCH,IAAQ,GAEZ,OAEDD,EAAK,KAAMC,CAAI,CAChB,CACA,OAAOH,EAAE,IAAI,MAAOA,EAAGE,CAAK,CAC7B,CAKAT,EAAO,QAAUM,IClDjB,IAAIQ,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isndarrayLike", "isInteger", "normalizeIndex", "getShape", "format", "at", "x", "nargs", "args", "idx", "sh", "N", "i", "main"]
}
