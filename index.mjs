// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.1.0-esm/index.mjs";import{isPrimitive as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-normalize-index@v0.2.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-shape@v0.2.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";function t(t){var a,d,m,o,l,h;if(!r(t))throw new TypeError(i("invalid argument. First argument must be an ndarray. Value: `%s`.",t));if(l=(o=s(t)).length,(a=arguments.length-1)<l)throw new RangeError("invalid invocation. Insufficient arguments. Array shape: (%s). Number of indices: %u.",o.join(","),a);if(a>l)throw new RangeError("invalid invocation. Too many arguments. Array shape: (%s). Number of indices: %u.",o.join(","),a);for(d=[],h=1;h<=a;h++){if(!e(m=arguments[h]))throw new TypeError(i("invalid argument. Index arguments must be integers. Value: `%s`.",m));if(-1===(m=n(m,o[h-1]-1)))return;d.push(m)}return t.get.apply(t,d)}export{t as default};
//# sourceMappingURL=index.mjs.map
